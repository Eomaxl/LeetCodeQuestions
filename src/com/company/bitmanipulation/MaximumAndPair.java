package com.company.bitmanipulation;
/**
 * Given an array arr[] of N positive elements. The task is to find the Maximum AND Value generated by any pair(arri, arrj)
 * from the array such that i != j. Note: AND is bitwise '&' operator
 *
 * Example 1:
 * Input:
 * N = 4
 * arr[] = {4, 8, 12, 16}
 * Output: 8
 * Explanation:
 * Pair (8,12) has the Maximum AND Value 8.
 *
 *
 * Example 2:
 * Input:
 * N = 4
 * arr[] = {4, 8, 16, 2}
 * Output: 0
 * Explanation: Any two pairs of the array has
 * Maximum AND Value 0.
 * */
public class MaximumAndPair {

    public static void main(String[] args){
        int arr1[] = {4, 8, 12, 16};
        int arr2[] = {4, 8, 16, 2};

        System.out.println("Output 1 :"+maxAND(arr1,4));
        System.out.println("Output 2 :"+maxAND(arr2,4));
    }

    public static int maxAND(int arr[], int n){
        int ans = 0;
        for(int i =31; i>=0; i--){
            int c = 0;
            for(int j = 0; j <n; j++){
                if(checkBit(arr[j],i) == true){
                    c++;
                }
            }
            if(c >= 2){
                ans = ans + ( 1<<i);
                for(int j = 0; j<n; j++){
                    if(checkBit(arr[j],i) == false){
                        arr[j] = 0;
                    }
                }
            }
        }
        return ans;
    }

    public static boolean checkBit(int num, int j) {
        if ((num & (1 << j)) == 0) {
            return false;
        } else {
            return true;
        }
    }
}
